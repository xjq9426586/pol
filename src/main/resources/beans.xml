<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 打开Spring的Annotation支持 -->
	<context:annotation-config />
	<!-- 设定Spring 去哪些包中找Annotation -->
	<context:component-scan base-package="rabbitmq" />
	<!-- 导入Src目录下的jdbc.properties文件 -->
	<context:property-placeholder location="classpath:/jdbc.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--配置连接池的初始值-->
		<property name="initialSize" value="1" />
		<!--连接池的最大值-->
		<property name="maxActive" value="500"/>
		<!--最大空闲时，当经过一个高峰之后，连接池可以将一些用不到的连接释放，一直减少到maxIdle为止-->
		<property name="maxIdle" value="2"/>
		<!--当最小空闲时，当连接少于minIdle时会自动去申请一些连接-->
		<property name="minIdle" value="1" />
		<property name="maxWait" value="1000" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置日志 使用Aop 记录日志注意:
            1). 此处proxy-target-class="true" 否则Service内的参数会被拦截掉,导致Service内无法获得前台传递的参数
            2). Service需交给spring容器去管理 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:aspect id="teslaLogAspect" ref="teslaLog">
			<!-- 对哪些方法进行日志记录, 此处屏蔽action内的set get方法 -->
			<aop:pointcut id="teslaLogAOP"
						  expression="execution(* log.*.*(..))"/>
			<aop:after-throwing pointcut-ref="teslaLogAOP"
								method="doAfterThrowing" throwing="e"/>
			<aop:around pointcut-ref="teslaLogAOP" method="doAround"/>
		</aop:aspect>

	</aop:config>

	<!-- Aop日志类 -->
	<bean id="teslaLog" class="log.CommonLogger"/>
	<bean id="a" class="log.a"/>

	<!--<import resource="applicationContext-rabbitmq.xml"></import>-->
</beans>